/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BooleanEqualInput: { // input type
    eq: boolean; // Boolean!
  }
  DateTimeRangeInput: { // input type
    gte?: any | null; // DateTime
    lte?: any | null; // DateTime
  }
  IDListEqualInput: { // input type
    eq: string[]; // [ID!]!
  }
  StringFilterInput: { // input type
    eq?: string | null; // String
    in?: string[] | null; // [String!]
    like?: string | null; // String
  }
  TaskCreateInput: { // input type
    content?: string | null; // String
    finished?: boolean | null; // Boolean
    name: string; // String!
  }
  TaskUpdateInput: { // input type
    content?: string | null; // String
    finished?: boolean | null; // Boolean
    name?: string | null; // String
  }
  TaskWhereFilterInput: { // input type
    content?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeRangeInput'] | null; // DateTimeRangeInput
    finished?: NexusGenInputs['BooleanEqualInput'] | null; // BooleanEqualInput
    ids?: NexusGenInputs['IDListEqualInput'] | null; // IDListEqualInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeRangeInput'] | null; // DateTimeRangeInput
  }
  UniqueIDInput: { // input type
    id: string; // ID!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Mutation: {};
  Query: {};
  Task: { // root type
    content?: string | null; // String
    createdAt: any; // DateTime!
    finished: boolean; // Boolean!
    id: string; // ID!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: Date;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  BooleanEqualInput: NexusGenInputs['BooleanEqualInput'];
  DateTimeRangeInput: NexusGenInputs['DateTimeRangeInput'];
  IDListEqualInput: NexusGenInputs['IDListEqualInput'];
  StringFilterInput: NexusGenInputs['StringFilterInput'];
  TaskCreateInput: NexusGenInputs['TaskCreateInput'];
  TaskUpdateInput: NexusGenInputs['TaskUpdateInput'];
  TaskWhereFilterInput: NexusGenInputs['TaskWhereFilterInput'];
  UniqueIDInput: NexusGenInputs['UniqueIDInput'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createTask: NexusGenRootTypes['Task']; // Task!
    deleteTask: NexusGenRootTypes['Task']; // Task!
    updateTask: NexusGenRootTypes['Task']; // Task!
  }
  Query: { // field return type
    task: NexusGenRootTypes['Task'] | null; // Task
    tasks: NexusGenRootTypes['Task'][]; // [Task!]!
  }
  Task: { // field return type
    content: string | null; // String
    createdAt: any; // DateTime!
    finished: boolean; // Boolean!
    id: string; // ID!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createTask: { // args
      data: NexusGenInputs['TaskCreateInput']; // TaskCreateInput!
    }
    deleteTask: { // args
      where: NexusGenInputs['UniqueIDInput']; // UniqueIDInput!
    }
    updateTask: { // args
      data: NexusGenInputs['TaskUpdateInput']; // TaskUpdateInput!
      where: NexusGenInputs['UniqueIDInput']; // UniqueIDInput!
    }
  }
  Query: {
    task: { // args
      where: NexusGenInputs['UniqueIDInput']; // UniqueIDInput!
    }
    tasks: { // args
      where?: NexusGenInputs['TaskWhereFilterInput'] | null; // TaskWhereFilterInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Query" | "Task";

export type NexusGenInputNames = "BooleanEqualInput" | "DateTimeRangeInput" | "IDListEqualInput" | "StringFilterInput" | "TaskCreateInput" | "TaskUpdateInput" | "TaskWhereFilterInput" | "UniqueIDInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}