### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly

input BooleanEqualInput {
  eq: Boolean
}

input BooleanListEqualInput {
  eq: [Boolean!]
}

input BooleanRequiredEqualInput {
  eq: Boolean!
}

input BooleanRequiredListEqualInput {
  eq: [Boolean!]!
}

"""
Date scalar type
"""
scalar DateTime

input DateTimeEqualInput {
  eq: DateTime
}

input DateTimeListEqualInput {
  eq: [DateTime!]
}

input DateTimeRequiredEqualInput {
  eq: DateTime!
}

input DateTimeRequiredListEqualInput {
  eq: [DateTime!]!
}

input FloatEqualInput {
  eq: Float
}

input FloatListEqualInput {
  eq: [Float!]
}

input FloatRequiredEqualInput {
  eq: Float!
}

input FloatRequiredListEqualInput {
  eq: [Float!]!
}

input IDEqualInput {
  eq: ID
}

input IDListEqualInput {
  eq: [ID!]
}

input IDRequiredEqualInput {
  eq: ID!
}

input IDRequiredListEqualInput {
  eq: [ID!]!
}

input IntEqualInput {
  eq: Int
}

input IntListEqualInput {
  eq: [Int!]
}

input IntRequiredEqualInput {
  eq: Int!
}

input IntRequiredListEqualInput {
  eq: [Int!]!
}

type Mutation {
  createTask(data: TaskCreateInput!): Task!
  deleteTask(where: UniqueIDInput!): Task!
  updateTask(data: TaskUpdateInput!, where: UniqueIDInput!): Task!
}

type Query {
  task(where: UniqueIDInput!): Task
  tasks(where: TaskWhereFilterInput): [Task!]!
}

input StringEqualInput {
  eq: String
}

input StringListEqualInput {
  eq: [String!]
}

input StringRequiredEqualInput {
  eq: String!
}

input StringRequiredListEqualInput {
  eq: [String!]!
}

type Task {
  content: String
  createdAt: DateTime!
  finished: Boolean!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input TaskCreateInput {
  content: String
  finished: Boolean
  name: String!
}

input TaskUpdateInput {
  content: String
  finished: Boolean
  name: String
}

input TaskWhereFilterInput {
  content: StringEqualInput
  createdAfter: DateTimeEqualInput
  createdBefore: DateTimeEqualInput
  finished: BooleanEqualInput
  ids: IDListEqualInput
  name: StringEqualInput
  updatedAfter: DateTimeEqualInput
  updatedBefore: DateTimeEqualInput
}

input UniqueIDInput {
  id: ID!
}
